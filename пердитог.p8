pico-8 cartridge // http://www.pico-8.com
version 18
__lua__
--init
function _init()
hero = {}
movement = {}
col = {} -- colide position
max_colide_count = 2
hero.hp = 3
hero.is_crouch = false
hero.coins = 0;
hero.x = 3*8
hero.y = 61*8
movement.x = hero.x
movement.y = hero.y

levels=
{
 "64x47 81 68x80 , 81 68x5 66 67 68x4 66 67 68x20 81 68x12 81 68x80 , 81 68x2 65x3 82 83 65x3 68 82 83 68x2 65 68x17 81 68x12 81 68x80 , 81 65x3 68x12 65x2 68x12 99 117 68x2 81 68x12 81 68x80 , 81 65x2 68 81 64x11 68 65x2 68x9 81 68 99 117 68x2 81 68x12 81 68x80 , 81 68 65x2 81 68x23 81 68 99 117 68x2 81 68x10 69 68 81 68x80 , 81 68 65 13 81 68x21 64x8 81 68x12 81 68x80 , 81 65x2 68 81 68 65 68x9 81 68x30 81 68x80 , 81 65 68x3 65 68x4 69 68x5 81 68x5 112x3 68x19 81 64x2 81 68x80 , 81 68x3 101 68x2 81 68x8 81 68x27 81 98x2 81 68x80 , 81 68x6 81 68x4 65 68x3 81 112x5 68x3 65x3 68x16 81 68x2 81 68x80 , 81 64x6 81 68x4 65x3 68x8 65x3 69 68 65x3 68x13 81 68x2 81 68x80 , 81 68x4 81 68x8 65x10 68x7 65x2 68x11 81 68x2 81 68x80 , 81 68 118 102 68 81 68x6 65 68x19 65 68x11 81 66 67 81 68x80 , 81 68 118 102 68 81 68x2 112x4 68x32 81 82 83 81 68x80 , 81 68 118 102 68 81 68x2 64x4 68x14 80 68x3 64x2 68x3 28 68x8 81 68 13 81 68x80 , 81 68x4 81 68x7 112x3 64x3 81 68x3 81 64x8 68x6 28 68x5 81 68x2 81 68x80 , 81 68x4 81 68x13 81 68x3 81 68x9 28 68x10 81 68x2 81 68x80 , 81 68x4 81 68x13 81 68 69 68 81 68x9 112x3 68x3 28 65 68x3 81 68x2 81 68x80 , 81 68x4 81 68 65x4 68x8 81 68x3 81 68x16 65x2 68x2 81 68 65 81 68x80 , 81 68x4 81 68 65 68x2 65x2 68x7 81 80x3 81 68x13 112x3 68 65x2 68 81 65x2 81 68x80 , 81 68x4 81 65x2 68x3 65 68x7 81 64x3 81 68x13 64x3 68x2 65 68x2 65 68 81 68x80 , 81 68x4 81 65 68 81 68x2 65 68x9 98 68x18 65x6 68 81 68x80 , 81 68x4 81 65 68 81 68x29 65x3 68x6 81 68x80 , 81 68x4 81 65x2 81 68x5 65x3 68x20 65x2 68x2 81 64x5 81 68x80 , 81 68x4 81 68 65 81 68x3 69 65x2 68x3 69 68 65 68x3 69 68x3 69 68x8 65 68x3 81 98x5 81 68x80 , 81 65x2 68x2 81 68 65 81 68x14 65x2 68x11 81 64x4 81 68x5 81 68x80 , 81 68 65 101 68x2 65x2 81 68x7 80 68x9 80 68x10 98x5 68x5 81 68x80 , 81 68x2 65x4 68 81 68x7 81 68x4 80 68x4 81 68x4 80 68x4 81 80x10 81 68x80 , 81 64x7 81 64x38 81 68x80 , 68x128 , 68x128 ",
 "68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 ",
 "68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x128 , 68x18 81 64x14 81 68x94 , 64x18 81 28 68x12 28 81 64x14 68x80 , 81 28x4 81 98x12 81 28 68x12 28 81 68x13 81 68x80 , 81 68 28 13 68 81 68x12 81 28 68x11 13 28 81 68x13 81 68x80 , 81 68x4 81 68x12 81 64x3 81 68 53 68x4 81 64x3 81 68x13 81 68x80 , 81 68x4 81 68x12 81 98x3 81 68x6 81 98x3 81 68x2 101 68x2 81 68x7 81 68x80 , 81 64x2 68x2 81 84 68x29 13 68x2 81 68x7 81 68x80 , 81 68x4 81 96 68x11 81 64x25 81 68x2 81 68x80 , 81 68x4 81 68x12 81 28 68x24 81 68x2 81 68x80 , 81 68x4 81 68x12 81 28 68x24 81 68x2 81 68x80 , 81 68x4 81 68x12 81 53 68x24 81 68x2 81 68x80 , 81 68x4 81 68x4 99 117 68x6 81 28 68x27 81 68x80 , 81 64x2 68x2 81 68x4 99 117 68x6 81 64x5 81 68x22 81 68x80 , 81 68x4 81 68x4 99 117 68x6 81 68x5 81 64x3 68x13 81 68x5 81 68x80 , 81 68x4 81 64x12 81 68x15 64 56 64x4 68 81 64x2 81 68x2 81 68x80 , 81 68x4 81 98x12 81 68x25 81 80x2 81 68x80 , 81 68x4 81 68x12 81 68x25 81 64x2 81 68x80 , 81 68x4 81x2 68x11 81 68x10 112x3 68x15 81 68x80 , 81 68x5 81 68x11 81 68x10 64x3 68x14 13 81 68x80 , 81 68x2 112x2 81 68x12 81 68x3 81 68x9 80 68x14 81 68x80 , 81 68x9 65x2 68x6 81 68x3 81 56 64x5 68x3 64x5 68x10 81 68x80 ",
 "81 68x10 65x2 68x5 81 68x24 64 68x3 81 68x80 , 81 68x7 65x6 68x4 81 68x21 64x4 68x3 81 68x80 , 81 68x5 65x2 68x3 65x2 68 81 68x3 81 68x28 81 68x80 , 81 68x5 65 68x4 65 68x2 81 68x3 81 64x2 68x26 81 68x80 , 81 64x5 68x3 64x5 81 68 101 68x2 98x2 68x26 81 68x80 , 81 68x8 81 68x14 81 68x4 48 68x3 28 68x4 81 68x8 81 68x80 , 81 68x8 81 68x3 65x2 64x32 81 68x80 , 81 65 68x4 112x2 68 81 68 65x2 68x3 65 68x27 65 68 28 81 68x80 , 81 68x5 65 68x2 81 68 65 68x4 65x2 68x4 65 68x4 65 68x2 69 68x2 65 69 68x3 69 68x3 69 68 65 68 13 81 68x80 , 81 68x8 81 68x18 112 64x18 81 68x80 , 81 68x8 81 68x11 66 67 68x23 65 81 68x80 , 81 68x5 64x3 81 68x4 13 68x3 65x2 68 82 83 68x7 65 68x14 65 68 81 68x80 , 81 64x2 68x44 81 68x80 , 81 68x12 64x6 68x6 64 81 68x20 81 68x80 , 81 68 65x2 68x9 65x2 68x3 56 64x6 68 81 68x20 81 68x80 , 81 65 68x3 65 68x5 65x2 68x3 65 68x5 65x2 68x2 81 65 68x6 65 68x9 65 68x2 81 68x80 , 81 68x4 65x2 68x4 65 68x4 65x2 68x4 65 68 28 68 81 56 64x5 81 68x5 101 68x4 65 68x2 81 68x80 , 81 68x32 81 68x13 81 68x80 , 81 64x2 112x3 64x37 81 68x3 81 68x80 , 81 68x11 81 68x30 81 68x3 81 68x80 , 81 68x8 65 68x2 81 68x4 28 68x15 29 68x9 81 13 68x2 81 68x80 , 81 68x8 65 68x2 81 68x9 53 68x20 81 68x3 81 68x80 , 81 68 65x2 68x4 65x3 68 81 68 65 68x7 53 68 65x2 68x9 65x2 68x4 53 68 81 68x3 81 68x80 , 81 28 68x7 65 68x37 81 68x80 , 81 68x5 64x41 81 68x80 , 81 64x2 68x44 81 68x80 , 81 68x11 65 68x3 65 68x5 65x2 68x3 65 68x16 65 68x2 81 68x80 , 81 68x3 69 68x2 65 68x8 65x2 68 66 67 68 65 68x4 65x2 68x6 65 68x8 65 68x2 81 68x80 , 81 68x15 69 68x2 82 83 68x2 69 68x7 69 68x2 65x3 68x2 69 68x4 118 102 68 81 68x80 , 81 68x7 13 68x26 65 68x6 101 68 118 102 68 81 68x80 , 81 68x11 81 48x2 68x13 81 48 68x5 65 68x2 81 68x2 65 68x2 118 102 68 81 68x80 , 64x3 112x4 64x40 81 68x80 "
}

current_level = 1
endlvl_x = 33*8
endlvl_y = 43*8

hero.sx = 1 -- speed
hero.sy = 1 -- speed
jump_power = 3.9
hero.on_flore = false
gravity = 0.3
time_damage = 1
second_save = 3
save_ef_speed = 21
save_form = false
img = 0
max_frame = 3
speed = 5
last = 0



torch_arr = {}

sprires_heart = {13,14,15}

sprires_enemy = {48,49,50}

sprites_coin = {28,29,30,31}


level_initialiation()
current_level = 1
my_time=0
mm_pos = 0
mm_status = 0
mm_max_button = 3
lm_pos = 0
lm_max_button = 3
tr_str = ""
cur_point = 0
xpow = 1

ex_hero = {}
end

function level_initialiation()

point_zone = find_point_zone(1)
button_zone = find_point_zone(16) 
chains_zone = find_point_zone(66)
chains_ex()
torch_arr = find_point_zone(48)
heart_arr = find_point_zone(80)
coin_arr = find_point_zone(96)
enemy_arr = find_point_zone(132)
enemy_ex()

end


-->8
--update
function _update()

if mm_status == 0 then 
 main_menu_update()
elseif mm_status == 1 then
 if(stat(16) == -1 and 
 stat(16)== -1 and
 stat(16) == -1) then 
 //music(0)
 end
 game_update()
elseif mm_status == 3 then
 level_menu_update()
else
 game_over_update()
 end
end

function main_menu_update()

if btnp(⬆️) then
sfx(56)
mm_pos = mm_pos <= 0 and mm_max_button-1
                     or mm_pos-1
end

if btnp(⬇️) then
sfx(56)
mm_pos = (mm_pos+1)%mm_max_button
end

if btnp(❎) then
sfx(56)
mm_status = mm_pos+1
end

end


function level_menu_update()

if btnp(⬆️) then
sfx(56)
lm_pos = lm_pos <= 0 and lm_max_button-1
                     or lm_pos-1
end

if btnp(⬇️) then
sfx(56)
lm_pos = (lm_pos+1)%lm_max_button
end

if btnp(❎) then
sfx(56)
if lm_pos == 1 then 
 set_lvl(1)
elseif lm_pos == 2 then 
 set_lvl(2) 
end
 
 mm_status = 1

end
end

function game_update()
key_control()
my_time+=1

--if (flr(hero.x) == flr(endlvl_x) and
--    flr(hero.y) == flr(endlvl_y)) then
--set_lvl(1)
--end
update_enemy(enemy_arr)



if hero.hp <= 0 then
mm_status = 9
end

end

go_start = 0
go_st_time = 0
go_time = 0
function game_over_update()
go_init()
go_time = time()-go_st_time
if go_time == 3 then
hero.hp = 3
hero.x = point_zone[cur_point].x*8
hero.y = (point_zone[
                cur_point].y-1)*8
mm_status = 0
go_start = 0
end
end

function go_init()

if go_start == 0 then
go_start = 1
music(-1)
sfx(57)
go_st_time = time()
end
end


function cell_in_arr(cell,arr)
 local temp = false
 for i = 1,#arr do
  if(cell == arr[i]) then
   temp = true
  end 
 end
 return temp
end
-->8
--movement
function key_control()
crouch = 
      hero.is_crouch and 0 or 1

--save zone
update_ex_h(hero)
col = collide(ex_hero,1,is_b,1,crouch)
if col ~= nil and col.x ~= nil
 then
sfx(62)
off_points(point_zone,101)
update_point(col,point_zone,100,
                    save_method)
end

--end lvl check
update_ex_h(hero)
col = collide(ex_hero,33,is_b,1,1)
if (col ~= nil and
    col.y ~= nil) then
if current_level != lm_max_button then
set_lvl(current_level)
current_level += 1
end
end

--♥eard
update_ex_h(hero)
col = collide(ex_hero,80,is_b,1,crouch)
if col ~= nil and col.x ~= nil
 then
   update_point(col,heart_arr,68,
                    save_method)
   hero.hp +=1 
   sfx(63)     
end  

--coin

update_ex_h(hero)
col = collide(ex_hero,96,is_b,1,crouch)
if col ~= nil and col.x ~= nil
 then
   update_point(col,coin_arr,68,
                    save_method)
   hero.coins +=1
   sfx(54)      
end 

--button zone
update_ex_h(hero)
col = collide(ex_hero,16,is_b,1,crouch)
if col ~= nil and col.x ~= nil
 then
update_point(col,button_zone,84,
                  button_method)
else
action = true
end

update_chains()

--thorns
update_ex_h(hero)
col = dist_to_col(ex_hero,2,is_b2,1,crouch)
if ((col  ~= nil and
col.x <= hero.sx) or
(col  ~= nil and
col.y <= hero.sy))
and not save_form
 then
 hero.hp-=1
 sfx(58)
 save_form = true
end
update_save_form()

jump_s_b = false
--springboards
update_ex_h(hero)
col = dist_to_col(ex_hero,3,is_b2,1,1)
if (col  ~= nil and
col.y <= hero.sy) or 
(col  ~= nil and
col.x <= hero.sx) 
 then
 sfx(59)
 hero.sy = 0 - (jump_power*1.55)
 jump_s_b = true 
end
update_tr(hero,jump_s_b)
hero_move()
end


function hero_move()
update_ex_h(hero)
ex_hero.sx = sgn(hero.sx)
colx = dist_to_col(ex_hero,1,is_b2,1,crouch)
update_ex_h(hero)
ex_hero.sy = sgn(hero.sy)
coly = dist_to_col(ex_hero,1,is_b2,1,crouch)
hero.sy += gravity

if coly ~= nil then

 if coly.y <= hero.sy then
 hero.sy = -2*sgn(hero.sy)
else
  hero.sy = coly.y-9 <= 0 and 0 
                     or hero.sy
  end
end

        
xd = abs(flr((hero.sx-1)/2)) //kostil


if colx ~= nil and
colx.x+(4*xd) <= hero.sx
 then
if (hero.sy == 0  and
 coly.y-9 >= 0) or 
 hero.is_crouch
  then
  hero.sx *= -1
  else
  xpow = 0
  end
double_jump() 
end

xpow = (colx == nil or 
 hero.on_flore) and 1 
or xpow
       
update_ex_h(hero)
ex_hero.sy = -1
coly = dist_to_col(ex_hero,1,is_b2,1,1)
if(btnp(⬆️)
 and not hero.is_crouch
 and hero.on_flore)
 and coly == nil then
 sfx(55)
 hero.sy -= jump_power
end



hero.x += hero.sx*xpow
hero.y += hero.sy
--
update_ex_h(hero)
ex_hero.sy = 1
coly = dist_to_col(ex_hero,1,is_b2,1,1)
hero.on_flore = hero.sy == 0 and
 coly ~= nil and coly.y-9 >= 0
--

update_ex_h(hero)
ex_hero.sy = -1
col = dist_to_col(ex_hero,1,
                     is_b2,1,0)


hero.is_crouch = false
if  btn(⬇️) or 
(col ~= nil and abs(col.y) > 1) then
hero.is_crouch = true
end


normalize_hero_pos()
end

function normalize_hero_pos()
if hero.sy == 0
and not hero.is_crouch  then
 hero.y = flr(hero.y/8)*8
end
end

function double_jump()
update_ex_h(hero)
ex_hero.sy = -1
coly = dist_to_col(ex_hero,1,is_b2,1,1)
if btnp(⬆️)  and hero.sy > 0 and
coly == nil 
and not hero.is_crouch
then
hero.sy -= jump_power*1.25
hero.sx *= -1
xpow = 1
end
end

function update_ex_h(obj)
ex_hero.x = obj.x
ex_hero.y = obj.y
ex_hero.sx = 0
ex_hero.sy = 0
end
-->8
-- checkers & updaters

--save_zone★
function save_method(zone,i,blk)
  zone[i].is_active = true
  
  mset(zone[i].x,zone[i].y,blk)
end

--button_zone
function button_method(zone,i,blk)

if action then
  action = false
  sfx(61)
  zone[i].is_active = 
           not zone[i].is_active
  chains_method()
  mset(zone[i].x,zone[i].y,
                zone[i].is_active
                 and blk+1 or blk)

end
end


--chains
function chains_method()
local n_b 
local c_b
local j_siz

 for i = 0, #chains_zone, 1 do
 j_siz = #chains_zone[i].b
  j = 0
  while j <= j_siz do

    n_b = chains_zone[i].b[j]
    c_b = button_zone[n_b]

   chains_zone[i].is_active = 
    c_b.is_active
   j = c_b.is_active and j+1
                      or j_siz+1
  end
  
  if chains_zone[i].is_active
   ~= chains_zone[i].buf_st
  then
  chains_zone[i].ch = 0
  sfx(60)
  chains_zone[i].buf_st = 
       chains_zone[i].is_active
  end
  
  
 end
end



function update_chains()
local d
if(chains_zone[0] ~= nil) then
 for i = 0, #chains_zone, 1 do

  if(not chains_zone[i].is_active)
   then
    d = chains_zone[i].d
    draw_chains(chains_zone[i],
      d.s,d.s2)
    else
     draw_chains(chains_zone[i],68
      ,68)
    end
  end
end
end

function chain_dir(c_b)
local d = {}
d.x = 0
d.y = 0
d.s = 68
d.s2 = 68

if c_b == 96 then
   d.x = 1
   d.s = 96
   d.s2 = 97
elseif c_b == 97 then
   d.x = -1
   d.s = 96
   d.s2 = 97
elseif c_b == 115 then
   d.y = 1
   d.s = 115
   d.s2 = 116
elseif c_b == 116 then
   d.y = -1
   d.s = 115
   d.s2 = 116
   end
 return d
end


ch_time = 0
function draw_chains(ch_obj,n,
                       n2)

local ch =  ch_obj.ch
local dir_c = ch_obj.d

ch_time = ch_time >= 5 and 0 
                     or ch_time
local x = ch_obj.x+(dir_c.x*ch)                  
local y = ch_obj.y+(dir_c.y*ch)

local a = not (is_b(x*8,y*8) ==2)
local a1 = not (is_b(
            (x+dir_c.x)*8,
            (y+dir_c.y)*8) ==2)

if a and ch_time == 0 then

mset(x,y,
 dir_c.x+dir_c.y==1 and n or n2)
ch_obj.ch = a and ch+1 or ch
end


if (a and a1) and ch_time == 0 then
mset(x+dir_c.x,y+dir_c.y,
 dir_c.x+dir_c.y==1 and n2 or n)
ch_obj.ch = a1 and ch+2 or ch
end



ch_time+=1
end

function chains_ex()

if(chains_zone[0] ~= nil) then
for i = 0, #chains_zone, 1 do
chains_zone[i].b = {}

c_b = mget(chains_zone[i].x,
           chains_zone[i].y)
chains_zone[i].d =chain_dir(c_b)
chains_zone[i].ch = 0
chains_zone[i].buf_st = false
local k = 0
for j = 0, #button_zone, 1 do

if button_zone[j].x == 
        chains_zone[i].x then 
chains_zone[i].b[k] = j
k += 1
end

if button_zone[j].y == 
        chains_zone[i].y then 
chains_zone[i].b[k] = j
k += 1
end

end
end
end
end

function update_point(col,pz,blk,method)

for i = 0, #pz, 1 do
if pz[i].x == col.x/8 and 
   pz[i].y == col.y/8 then
    method(pz,i,blk)
 end
end
end

-- thorns

-- save form

function update_save_form()
if save_form and time_damage >= 0 then
time_damage = flr(save_ef_speed*
     (second_save+last- time()))
 save_form = time_damage>= 0
else
 time_damage = save_ef_speed
                    *second_save
last = time()
end
end

-- springboards
cur = {}
cur.x = 0
cur.y = 0
diff = 0

function update_tr(obj,signal)
local x
local y
str_time = (signal and diff == 0)
        and my_time or str_time
   
diff = (signal or diff > 0) and
     my_time - str_time+1 or diff
   
if diff > 20 then
  diff = 0
end
  
  update_ex_h(hero)
  ex_hero.y = 1
  cur = (signal and diff == 1) and
      collide(ex_hero,3,is_b2,1,1) or cur
  x = cur.x ~= nil and cur.x/8 or x
  y = cur.y ~= nil and cur.y/8 or y   
  if (mget(x,y) == 113
    or mget(x,y) == 112) 
   and cur.x ~= nil and
    cur.y ~= nil then
    
    if(diff < 3 or diff > 17)
    then
   
    mset (x,y,112)
    mset (x,y-1,68)
   
   else 
   
    mset (x,y, 113)
    mset (x,y-1,114) 
    
    end 
  end
                   
end


-->8
--collide
function collide(obj,n,is_m
                   ,x_lim,y_lim)
x_lim = x_lim == nil and 1 or x_lim
y_lim = y_lim == nil and 1 or y_lim

obj_m = {}
obj_m.x = (obj.x+7)/8
obj_m.y = (obj.y+4)/8

local result = {}
c = {} -- colide position
c.x= 8*flr(obj_m.x)+(obj.sx*8)
c.y= 8*flr(obj_m.y)+(obj.sy*8)

for j=0,y_lim,1 do
 for i=0,x_lim,1 do
  if is_m(c.x+(8*i),c.y+(8*j),n) == n
  then
  
  result.x= c.x+(8*i)
  result.y= c.y+(8*j)
  
  return result
   end
  end
 end
 
 return result
end

function dist_to_col(obj,n,is_m
                   ,x_lim,y_lim)
local result = {}
local p = {}
p.x = 0
p.y = 0
p = collide(obj,n,is_m,
                    x_lim,y_lim)
xd =flr((obj.sx+1)/2)

if p.x ~= nil and p.y ~= nil then
result.x= abs(p.x-obj.x)-7-(8*xd)
result.y= abs(p.y-obj.y)-7
else
result = nil
end

return result
end

function is_b(x,y) -- is block
map_n = mget(x/8,y/8)
return fget(map_n)
end

function is_b2(x,y,n) -- is block
map_n = mget(x/8,y/8)
return fget(map_n,n) and n or 9
end
-->8
--웃nemy
function update_enemy(pz)
if(#pz > 0) then
 for i = 0, #pz, 1 do
  pz[i].speed = 0.3
  pz[i].is_active = true
  
  if pz[i].undergr then
  undrgr_enemy(pz[i])
  else
  fly_walk_enemy(pz[i])
  end
  
  pz[i].x += pz[i].sx 
                * pz[i].speed
  
  spike = (pz[i].undergr and 
         not pz[i].is_active ) 
                    and 8 or 0
  
  --damage
  if pz[i].x >= hero.x and
    pz[i].x < hero.x+16 and
    pz[i].y >= hero.y-spike and
    pz[i].y < hero.y+16+spike
    and not save_form then
 hero.hp-=1
 sfx(58)
 save_form = true
  end
end
end
end

function undrgr_enemy(enemy)

enemy.sy = 0
col = dist_to_col(enemy,1,is_b2,0,0)
if col == nil then
enemy.sx *= -1
end

enemy.is_active = true
if(abs(hero.x-enemy.x) <= 15) then
enemy.speed = 0
enemy.is_active = 
   not (abs(hero.x-enemy.x) <= 6)
end

end

function fly_walk_enemy(enemy)
enemy.sy = 1
  col2 = dist_to_col(enemy,1,is_b2,0,0)
  enemy.sy = 0
  col = dist_to_col(enemy,1,is_b2,0,0)
  
  if(col ~= nil or
   (col2 == nil 
   and not enemy.flyaible))
   then 
  enemy.sx *= -1
  end
end

function enemy_ex()
if #enemy_arr > 0 then
for i = 0, #enemy_arr, 1 do

enemy_arr[i].img = 
           mget(enemy_arr[i].x,
             enemy_arr[i].y)
mset(enemy_arr[i].x,
             enemy_arr[i].y,68)
enemy_arr[i].x *= 8
enemy_arr[i].y *= 8
enemy_arr[i].sx = 1
enemy_arr[i].sy = 0
col2 = dist_to_col(
enemy_arr[i],1,is_b2,0,0)
enemy_arr[i].flyaible = 
      enemy_arr[i].img == 53
enemy_arr[i].undergr = 
      enemy_arr[i].img == 56
enemy_arr[i].max_f = 
           enemy_arr[i].flyaible 
                      and 2 or 3
enemy_arr[i].sy = 0
enemy_arr[i].sx = 1
end
end
end
-->8
--map parser
function get_sumb_index(
           str,start_sub,sumb)
  result = -1
  for i=start_sub, #str do
   local s = sub(str,i,i)
   if s == sumb then
      result = i 
      break
   end
  end
  return result
end




function find_point_zone(flag)
local result = {}
m = 0
for i = 0, 127,1 do

for j = 0, 63,1 do

if  fget(mget(i,j)) == flag then
local examp = {}
examp.x = i
examp.y = j
examp.is_active = false
result[m] = examp
m += 1
end

end

end

return result
end

function off_points(pz,blk)

for i = 0, #pz, 1 do
pz[i].is_active = false
mset(pz[i].x,pz[i].y,blk)
end

end




-->8
--draw
function _draw()
cls()
camera(hero.x-64,hero.y-64)
if mm_status == 0 then
 main_menu()
 elseif mm_status == 1 then
 level_draw()
 elseif mm_status == 3 then
 level_menu_draw()
 else 
 game_over()
 end
end

function game_over()
print('game over',hero.x,
                    hero.y+40,8)
end

function main_menu()
print(mm_pos==0 and'❎start'or
 'start',hero.x,hero.y,
         mm_pos == 0 and 3 or 7)
print(mm_pos==1 and'❎about'or
 'about',hero.x,hero.y+10,
       mm_pos == 1 and 3 or 7)
print(mm_pos== 2 and'❎levels'or
 'levels',hero.x,hero.y-10,
       mm_pos == 2  and 3 or 7)              
end

function level_menu_draw()
print(lm_pos==0 and'❎level 1'or
 'level 1',hero.x,hero.y,
         lm_pos == 0 and 3 or 7)
print(lm_pos==1 and'❎level 2'or
 'level 2',hero.x,hero.y+10,
       lm_pos == 1 and 3 or 7)
print(lm_pos==2 and'❎level 3'or
 'level 3',hero.x,hero.y+20,
       lm_pos == 2 and 3 or 7)       
end

function level_draw()

map(0,0,0,0,100,100)

if time_damage%2 == 0 then
pal(10,1)
else
pal()
end



draw_hero_coins()
_draw_hero()


draw_hero_hp()

draw_arr(torch_arr,10,69,3)

draw_arr(heart_arr,5,13,3)

draw_arr(coin_arr,5,28,4)

_draw_enemy(enemy_arr)
end

function _draw_enemy(arr)

if(#arr > 0) then
for i=0,#arr,1 do
spr(
flr(arr[i].img + (my_time/4)
                 %arr[i].max_f),
arr[i].x,arr[i].y,1,1,
sgn(arr[i].sx) == 1,
false)

if not arr[i].is_active then
spr(59,
arr[i].x,
arr[i].y - sgn(arr[i].y-hero.y)*8,
1,1,
false,
sgn(arr[i].y-hero.y) < 0)

end

end
end

end

function _draw_hero()
img += 1/speed
frame = 0
if hero.sy==0 then
frame = flr(img) % max_frame
end


sspr (hero.is_crouch and
48 or frame*16,0,
16,16,
hero.x+3,
hero.y- (hero.is_crouch and -4 or
((2-frame)*2))
,16,16,
sgn(hero.sx) == -1,false)

if img >= max_frame then
 img = 0
 end
end

--hp
function draw_hero_hp()
  for i = 1,hero.hp do
  spr(12,hero.x-64+i*8+1*i,
               hero.y-56)
  end
end

function map_parse(str_map, st_y)
x=0
y=st_y
 while str_map!="" do
  index = get_sumb_index(
      str_map, 0, ' ')
  sub_str = sub(str_map,
             0,index-1)
 
  str_map = sub(str_map,index+1)
                    
  if #sub_str == 1 then
  
    x = 0
    y += 1
    
  elseif #sub_str == 2 then
  
   local s1 = sub(sub_str,1,2)
   mset(x,y,s1)
   x += 1
  
  elseif #sub_str == 3 then
  
   local s1 = sub(sub_str,1,3)
   mset(x,y,s1)
   x += 1 
   
  else
  
   x_sym = get_sumb_index(
      sub_str, 0, 'x')    
   amount = sub(sub_str,x_sym+1,
             #sub_str)
             
   for j = 0,amount-1 do
    local s3 = sub(sub_str,0,
                x_sym-1)
    mset(x,y,s3)
    x += 1
   end
   
  end     
 end
end



function set_lvl(lvl_num)

 map_parse(levels[lvl_num*2-1],0)
 map_parse(levels[lvl_num*2],32)

 level_initialiation()
 startl = find_point_zone(32)[0]
 hero.x = startl.x*8 - 8
 hero.y = startl.y*8 - 8


 endl = find_point_zone(33)[0]
 endlvl_x = endl.x*8
 endlvl_y = endl.y*8 - 8
 

end




function draw_hero_coins()
  print(hero.coins,hero.x-56,
               hero.y-46,9)
  
end

function draw_arr(array,spd,ind,
                  spr_am)
 for i = 0, #array, 1 do
  mset(array[i].x,
       array[i].y,array[i].is_active
       and 68 or
       ind+flr(my_time/spd
      +flr(array[i].x))%spr_am)
 end                        
end
__gfx__
0000882200000000000a000000000000000000000000000000000228800900000000000000000000000000000000000008800880088008800000000000000000
0008288888090000000088220000000000000000000000000000888889900000000000000000000000000000000000008e8888888e8888881101110111011101
00a0208889900000000908888800000000008822000000000008288fbf000000000000000000000000000000000000008ee888888ee888881181180111011101
0000908fbf0000000000008889990000000288888809000000a020ff3fe0000000000000000000000000000000000000888888888888888818e8888111811801
000000ff3fe000000000008fbf00000000908088899000000000977777770000000000000000000000000000000000008888888a888888880888888008e88880
000000ffff000000000000ff3fe000000000a08fbf00000000008a88aaa8000000000000000000000000000000000000088888a0088888810188881108888881
0000777777070000000000ffff000000000000ff3fe000000008aa88aaaa80000000000000000000000000000000000000888a00018888110118801101888811
00000777777000000000777777000000000000ffff000000000666ff66666000000000000000000000000000000000000008a000011880110111101101188011
00008a88aa8000000000077777770000000077777707000000000000000000000000000000000000000000000000000000770000000000000000000000000000
00008a88aaa8000000008a88aa800000000007777770000000000000000000000000000000000000000000000000000017977701110977011109700111079001
0008aa88aaaa800000008a88aaa8000000008a88aa80000000000000000000000000000000000000000000000000000079944970109777011109700110799901
000006ff666000000008aa88aaaa800000008a88aaa8000000000000000000000000000000000000000000000000000009499790107779011109770110974901
0000600000060000000006ff666000000008aa88aaaa800000000000000000000000000000000000000000000000000009499790077479000009770000979970
00000666666000000000600000060000000006ff6660000000000000000000000000000000000000000000000000000004977990074999010107701100999471
00006000000600000000066666600000000060000006000000000000000000000000000000000000000000000000000000444401010490110177701101094711
00066666666660000006666666666000000666666666600000000000000000000000000000000000000000000000000001000011011000110110001101177011
88888888000000009999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060606
88888888000000009999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060606
88888888000000009999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060606
88888888000000009999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060606
88888888000000009999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060606
88888888000000009999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000006060606
88888888000000009999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066060666
88888888000000009999999900000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000066666666
000808000808008000800800000000000000000000000000000000000000000000900900000000000000000000000000000000000000000000000000dddddddd
008080080080088080080008000000000000000000050500000000000000000009999990000000000090090000000000000000000000000000000000dddddddd
0808088008808088080088800000000000000000005656600055000000000000009009000000000000000000000b0000000000000000000000000000dddddddd
8888888888888880888888880000000000000000059566000595550000000000033003b00000000000b33b0000030000000000000000000000000000dddddddd
86886888888888888688688800000000000000000555000005556660000000003d3333d3033003b003dffdb000033000000000000000000000000000dddddddd
06886880068868800688688000000000000000000055500000555000000000003fdffdfb3f3333fb3fdffdfb00333000000000000000000000000000dddddddd
008888000088880000888800000000000000000000055000000550000000000003dffdb003dffd3003ffffb00033b300000000000000000000000000dddddddd
00088000000880000008800000000000000000000000000000000000000000000003b00000d33d0000333b0003333b00000000000000000000000000dddddddd
55550555000000000000000000000000000000000000c0000000c000000000c00000000000000000000000000000000000000000000000000000000000000000
55550555110dd101010100dddd00101011011101110c110111011c0111011c010000000000000000000000000000000000000000000000000000000000000000
000000001101110100100d0dd0d0010011011101110cc101110ccc011101ccc10000000000000000000000000000000000000000000000000000000000000000
50555555110111010100d00dd00d001011011101110ccc011101ccc1110cccc10000000000000000000000000000000000000000000000000000000000000000
5055555500000000010d000dda00d0100000000000ccdc00000cdcc0000cdc000000000000000000000000000000000000000000000000000000000000000000
000000000dd11011010d00dddda0d01001111011011c5c1101115c1101115c110000000000000000000000000000000000000000000000000000000000000000
555555550111d011010d0d0dd0d0d010011110110111501101115011011150110000000000000000000000000000000000000000000000000000000000000000
5555555501111011010dd00dd00dd010011110110111501101115011011150110000000000000000000000000000000000000000000000000000000000000000
0000000005550550010d000dd000d010000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
1100110100000000010da0add000d0106628110169a1110100000000000000000000000000000000000000000000000000000000000000000000000000000000
1107010105505550010d00dddd00d010628881019aaa110100000000000000000000000000000000000000000000000000000000000000000000000000000000
1106010105505550010d0d0dd0d0d010628881019aaa110100000000000000000000000000000000000000000000000000000000000000000000000000000000
0076600000000000010dd00dd00dd010628880009aaa100000000000000000000000000000000000000000000000000000000000000000000000000000000000
0076601105555050010d000dd000d010628880119aaa101100000000000000000000000000000000000000000000000000000000000000000000000000000000
0766660100000000010d000dd000d0106628101169a1101100000000000000000000000000000000000000000000000000000000000000000000000000000000
06666601055505500110dddddddd0110011110110111101100000000000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000666660042424277000000000000000077242424000000000000000000000000000000000000000000000000000000000000000000000000
11066666666660110766660142424277110111011101110177242424000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000001076600142424277110191011101910177242424000000000000000000000000000000000000000000000000000000000000000000000000
66660111011066661076600156565277110999011109c90177555555000000000000000000000000000000000000000000000000000000000000000000000000
6666011101106666000600005555527700999990009c8c9077555555000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000107001142424277011999110119c91177242424000000000000000000000000000000000000000000000000000000000000000000000000
01066666666660110110101142424277011190110111901177242424000000000000000000000000000000000000000000000000000000000000000000000000
01100000000001110111101142424277011110110111101177242424000000000000000000000000000000000000000000000000000000000000000000000000
88888888060000608888888800066000060000604424424444244244000000000000000000000000000000000000000000000000000000000000000000000000
06666660060000601601116111066001060110604424424444244244000000000000000000000000000000000000000000000000000000000000000000000000
66666666666666661601116100066000060110604424424444244244000000000000000000000000000000000000000000000000000000000000000000000000
50555555505555551166660106066060060000605565565555555555000000000000000000000000000000000000000000000000000000000000000000000000
50555555505555550600006006000060060660605555555555555555000000000000000000000000000000000000000000000000000000000000000000000000
00000000000000000611106106011060000660004424424444244244000000000000000000000000000000000000000000000000000000000000000000000000
55555555555555550166661106011060010660114424424444244244000000000000000000000000000000000000000000000000000000000000000000000000
55555555555555550611106106011060010660114424424444244244000000000000000000000000000000000000000000000000000000000000000000004444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444444444441444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444444444441414144444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444444444444444141444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444404
04040404040404040404040404040404040404040404040404040404040404040404040404040444444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444444444444444444444444444444444444444444444444444444444444444444441544444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444444444444444444141414444444444444444414444444441444444444444444441544444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444444444444444414144414145444441414541414445444141414144444444444441544444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444444444444444414444444441444144414441444144414144414544436574454441544444444444444141444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444444444444441414444444444414444444144444441444444444d01436571414441544141414444414444444144444444444144444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15c14444444444444444444444444405444414440544144405441444051544444436574414141544444414444444444444141444444444141444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444415
15444444444444040404040404040404040404040404040404040404040404040404040404041544444444444444444444444444444444441414444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444415
15040404444444444444444444444444444444444444444444444444444444444444444444441544444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444415
15444444444444444444444444444444444444444444444444444444444444444444444444441544444444444444444444444414144444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444415
15444444444454444444444444445444444444445444444444544444444444441414144444441544444444444444444444441444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444415
15444444444444444444444444444444444444444444444444444444444444441414444444441544444444444444444444444444444444444444444444444444
44444414444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444415
15444444444444444444444444444444444444444444444444444444444444441444144444441544444444444444444444444444444444444444444444444444
44444414144444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444415
15444444444444444444444444154444444444444444444444444444444444444444441444441544444444444444441444444444444444444444444444444444
44444444141444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444415
15040404070707070404040404044444040404444444040404444404040404044444444444441544444444444444444444444444444444441414144444444444
44444444441414444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444415
1544444444444444444444444444444444444444444444444444444444444444441444c144441544444444444444444444144444444444444414444444444444
44444444444414444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444415
15444444444444444444444444444444444444444444444444144444544444444444444444441544444444444444444444444444444444444444444444444444
44444444444414144444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444444444444444444444444444444444444445444444444441414444444040404041544444444444444444444444444444444444444444444444444
44444414444444141444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444444444444144444444444445444144444144444444444144444444444444444441544444444444444444444444444444444444444444444444444
44141414144414144454444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444444444414141444444414144444444444444444441444444404040444444444441544444444444444444444444444444444444444441444444444
44444444441414444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444444444444144444444414444444444414444444040404444444444444444444441544444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444456444444144444441444444444040404044444444444444414444444444444441544444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444444444444144444040404044444144444444444444444141414444444444444441544444444444444444444444444444444444444441444444444
44144444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444404444444444444444444444444444414441414144444144444444414144414441544444444444444444444444444444444444444444444144444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
15444444444404040404444444444444444444444444444444444444444444044444444444441544444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
04040404040404040404040404040404040404040404040404040404040404040404040404040444444444444444444444444444444444444444444444444444
44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
__gff__
0000000000000000000000000050505000000000000000000000000060606060000000000000000000000000000000048400000000840000840000040000000202000000003020200000000000000000040200001010000100000000000000004242042100012000000000000000000008080042420000000000000000000000
0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
__map__
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
4444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444
__sfx__
010e000007732077320770007700167320773207700077000a7300a7200a7300a7200a7300a7200a7300a72016722077420770007700077320773207700077000a7320a7200a7320a7200b5220b7300b7320b720
010e00000c053006000000000000274150000000000000000c05300000000000000027415000000c063000000c053000000000000000165321552213522000000c05300000000000000016532155221352200000
010e0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001a032
010e00001f0301f0221f0151f0001f000000000000000000000000000000000000002103021022210150000022030220222201500000000000000000000000002403024022240152203022022220152103221025
010e0000220302202222015000000000000000000000000000000000000000000000000000000021030220302103021022210150000000000000001f030210301f0301f0221f015000000000000000000001a030
010e00001f0301f0221f0150000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001d0301d0221d0151b0301b0201b0151a0301a025
010e00001a0301a0221a015000000000000000000000000000000000000000000000000000000000000000001d0301d0201d0151b0301b0201b0151a0301a0251f0301f0201f0221f0121b0301b0201b0221b015
010e00001a0301a0201a0221a01200000000000000000000000000000000000000000000000000000002603027030270202701200000000000000000000000002603026020260220000000000000000000024030
010e00002603026022260150000000000000000000000000240302402224015000000000000000000002203024030240222401500000000000000000000000002603026020260122203022022220151f03000000
010e00001f0301f0221f0150000000000000000000000000240302402224015220302202222015210300000021030210202102221012000000000000000000002603026020260122403024022240152203000000
010e00002203022020220222201500000000000000000000260302602026012270302702027012260302601224030240222401526030260202601224030240152203022022220152103022030220152103021015
0119000030040300453003530025000000000030040320402f0402f0452f0352f02500000000002f040300402d0402d0452d0352d025000000000000000000003405034015320503201530050300152f05030050
011000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000001000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
001000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010200002d0322d0372d0302d02532022320123201232012320123201232012320123201232012320123201524002240020000200002000020000200002000020000200002000020000200002000020000200002
0102000008560085600856008050090500a5500a5500b0500b0500b0400c7400c7400d7400d0300d0200d01000000000000000000000000000000000000000000000000000000000000000000000000000000000
010100001856018560185501854018720187100050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500005000050000500
01080000140501b750165500b1201105018750125500a12010050167500e550091200d05014750081200555008550075500855007550085500755008550075500855008550085500855008550085500855008550
0104000013030101300e1300c14009140090400715006150031500315003150041500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
0002000004062077600a7500c7500f047130471b5321f532270212972029720297202972000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
010500000c1500c1400d130131301512015120131300d120081200c02008040070500000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
000500001752016540165401655000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01040000260202652226520260222d7222d7222d5222d525000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000
01020000290102901029010295102e0102e0102e0102e0102e5102e510330103301033010335103351038010380103801038510385103a0103a0103a0103a5103a50000000000000000000000000000000000000
__music__
00 01004244
00 01000244
01 01000344
00 01000444
00 01000544
00 01000644
00 01000744
00 01000844
00 01000944
02 01000a44

